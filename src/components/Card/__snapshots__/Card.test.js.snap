// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`without component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "activeClassName": "active",
      "children": Array [
        <div
          className="Card-title"
        >
          <span
            className="Card-title-right"
          />
        </div>,
        <div
          className="Card-footer"
        />,
      ],
      "className": "Card active",
      "onClick": [Function],
      "smooth": true,
      "to": "/quran/undefined",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            null,
            <span
              className="Card-title-right"
            />,
          ],
          "className": "Card-title",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "Card-title-right",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "Card-footer",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "activeClassName": "active",
        "children": Array [
          <div
            className="Card-title"
          >
            <span
              className="Card-title-right"
            />
          </div>,
          <div
            className="Card-footer"
          />,
        ],
        "className": "Card active",
        "onClick": [Function],
        "smooth": true,
        "to": "/quran/undefined",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              null,
              <span
                className="Card-title-right"
              />,
            ],
            "className": "Card-title",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "Card-title-right",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "Card-footer",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
